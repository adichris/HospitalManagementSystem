# Generated by Django 3.2.5 on 2021-10-09 02:08

import account.models
from django.db import migrations, models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=60)),
                ('last_name', models.CharField(max_length=120)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'm'), ('Female', 'f'), ('Transgender', 'transgender'), ('Other', 'other')], max_length=30, null=True)),
                ('dob', models.DateField(verbose_name='Date of birth')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=account.models.upload_user_to_path)),
                ('slug', models.SlugField(unique=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('is_online', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('session_key', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('first_name', 'last_name', 'email'),
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
    ]
